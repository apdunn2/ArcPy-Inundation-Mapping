# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# ModelBuildTemplate.py
# Created on: 2017-10-03 10:45:15.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------
class LicenseError(Exception):
    pass


# Import arcpy module
import arcpy
from arcpy.sa import *
import os
import arcview
import sys

arcpy.env.overwriteOutput = True


def inundation_map_builder(cut_line_file, profile, output_shapefile):

    xs_cut_lines = cut_line_file
    profile = profile
    output_shapefile = output_shapefile


    try:
        if arcpy.CheckExtension("3D") == "Available":
            arcpy.CheckOutExtension("3D")
        else:
            # Raise a custom exception
            #
            raise LicenseError

        if arcpy.CheckExtension("Spatial") == "Available":
            arcpy.CheckOutExtension("Spatial")
        else:
            # Raise a custom exception
            #
            raise LicenseError

        # Local variables:
        cook_thorn__2_ = "D:\GIS\cook_thorn"
        XSCutlines____ = "XSCutlines...."
        BoundingPolygonLeveet = "BoundingPolygonLeveet"
        modelbuild = "D:\\LittleCal_Inundations\\TINS\\modelbuildtin"
        modelbuild11 = "D:\\LittleCal_Inundations\\Rasters\\modelbuild11"
        cook_thorn = "D:\GIS\cook_thorn"
        modelbuild12 = "D:\\LittleCal_Inundations\\Rasters\\modelbuild12"
        modelbuild13 = "D:\\LittleCal_Inundations\\Rasters\\modelbuild13"
        mdelbuild1int = "D:\\LittleCal_Inundations\\Rasters\\mdelbuild1int"
        modelbuild1dis_shp = "D:\\LittleCal_Inundations\\Shapefiles\\modelbuild1dis.shp"
        modelbuild1_shp = "D:\\LittleCal_Inundations\\Shapefiles\\" + output_shapefile

        mapping_xs = "D:\LittleCal_Inundations\Shapefiles\MappingXS.shp"
        bound_poly = "D:\\LittleCal_Inundations\\Shapefiles\\BoundingPolygonLeveet.shp"

        params = mapping_xs + " " + profile + " Soft_Line <None>; " + bound_poly + " <None> " + "Hard_Clip <None>"


        #params = "XSCutlines2.shp 05FEB2008_2400 Soft_Line <None>; BoundingPolygonLeveet.shp <None> Hard_Clip <None>"

        coord = "PROJCS['NAD83 / Illinois East (ftUS)',GEOGCS['GCS_North_American_1983'," + \
                "DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]]," + \
                "PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]]," + \
                "PROJECTION['Transverse_Mercator'],PARAMETER['false_easting',984250.0]," + \
                "PARAMETER['false_northing',0.0],PARAMETER['central_meridian',-88.33333333333333]," + \
                "PARAMETER['scale_factor',0.999975]," + \
                "PARAMETER['latitude_of_origin',36.66666666666666]," + \
                "UNIT['Foot_US',0.3048006096012192]]"

        # Replace a layer/table view name with a path to a dataset (which can be a layer file) or create the layer/table view within the script
        # The following inputs are layers or table views: "Mapping_XS", "XS Cut Lines"
        arcpy.JoinField_management(in_data=mapping_xs, in_field="ProfileM", join_table=xs_cut_lines,
                                   join_field="ProfileM", fields=profile)


        # Process: Create TIN
        arcpy.CreateTin_3d(modelbuild, coord, params, "DELAUNAY")

        # Process: TIN to Raster
        arcpy.TinRaster_3d(modelbuild, modelbuild11, "FLOAT", "LINEAR", "CELLSIZE 2", "1")

        # Process: Raster Calculator
        modelbuild12 = ((Raster(modelbuild11) - Raster(cook_thorn)) * ((Raster(modelbuild11) - Raster(cook_thorn)) > 0))

        # Process: Set Null
        arcpy.gp.SetNull_sa(modelbuild12, modelbuild12, modelbuild13, "VALUE = 0")

        # Process: Int
        arcpy.Int_3d(modelbuild13, mdelbuild1int)

        # Process: Raster to Polygon
        arcpy.RasterToPolygon_conversion(mdelbuild1int, modelbuild1dis_shp, "SIMPLIFY", "Value")

        arcpy.RepairGeometry_management(modelbuild1dis_shp)

        # Process: Dissolve
        arcpy.Dissolve_management(modelbuild1dis_shp, modelbuild1_shp, "", "", "MULTI_PART", "DISSOLVE_LINES")

        arcpy.DeleteField_management(in_table=mapping_xs, drop_field=profile)


    except LicenseError:
        print("3D or Spatial Analyst license is unavailable")

    except arcpy.ExecuteError:
        print(arcpy.GetMessages(2))

    finally:
        arcpy.CheckInExtension("3D")
        arcpy.CheckInExtension("Spatial")


if __name__ == '__main__':
    dataframe_dir = "D:\\LittleCal_Inundations\\DataFrames\\"
    dataframe_list = ["500NoLevee\\500NoLevee.gdb", "100NoLevee\\100NoLevee.gdb", "50NoLevee\\50NoLevee.gdb"]
    shapefile_names = ["500NoLevee", "100NoLevee", "50NoLevee"]
    cutline_path = "\\RasResults\\XSCutlines"
    profile_list = ['P004']
    for dataframe in range(len(dataframe_list)):
        input_xs = dataframe_dir + dataframe_list[dataframe] + cutline_path
        for profile in profile_list:
            inundation_map_builder(input_xs, profile, (shapefile_names[dataframe]+profile+'.shp'))


    #input_xs = "D:\LittleCal_Inundations\DataFrames\ArcPyTesting\ArcPyTesting.gdb\RasResults\XSCutlines"
    #profile = 'P002'
    #output_file = 'arcpytest.shp'

    #inundation_map_builder(input_xs, profile, output_file)